# Config file to study  CSC strip gains correction taken during Slice Tests / MTCC. 
#
# Dominique Fortin - UCR. 
#
# Note that the user will have to set the environment variables to read in from
# database prior to running this.  These can be setup in the authentication.xml file
# or sourced from a .setoracle file I have put somewhere.


process TestStudy = {

   module prod = CSCGainsStudy{ untracked bool debug = true
                                untracked string rootFileName = "csc_strip_gains.root"
}

# Data: - just read constants
   source = PoolConvert {
     untracked vstring fileNames = {'castor:/castor/cern.ch/cms/emuslice/globaldaq/mtcc.00002181.A.testStorageManager_0.0.root'}
     # 00000282_FilterUnitFramework_0_0.root'}
     untracked int32 maxEvents = 1
   }
# Unpacker --> transform raw data to CSCDigis
   module cscunpacker = CSCDCCUnpacker {
       untracked bool Debug = false
       untracked bool PrintEventNumber = false
       FileInPath theMappingFile = "RecoLocalMuon/CSCCalibrateDigis/data/csc_slice_test_map.txt"
       untracked int32 Verbosity = 10
       untracked bool UseExaminer = true
       untracked uint32 ErrorMask = 0xDFCFEFFF 
       untracked uint32 ExaminerMask = 0x7FB7BF6
   }
        

# Variables read from database for calibration purposes

   es_source = PoolDBESSource {
     VPSet toGet = {{ string record = "CSCGainsRcd"
                      string tag = "CSCGains_from_online" }}
     bool loadAll = true
     string connect = "oracle://orcon/CMS_COND_CSC"
     untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"
     untracked uint32 authenticationMethod = 0
# To select from specific run range
#     string timetype = "runnumber"
# To select using timestamp
     string timetype = "timestamp"
     untracked uint32 messagelevel = 0
   }


# Path
   path p = { cscunpacker, prod }
}

